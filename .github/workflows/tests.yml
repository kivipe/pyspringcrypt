name: Lint and test code

on: [push]

jobs:
  runtests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.6.1
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Install project
      run: poetry install --no-interaction --no-root
    - name: Analysing the code with pylint
      run: |
        source .venv/bin/activate
        pylint src
        pylint tests
    - name: Analysing the code with mypy
      run: |
        source .venv/bin/activate
        mypy src
        mypy --namespace-packages tests
    - name: Analysing the code with flake8
      run: |
        source .venv/bin/activate
        flake8 src
        flake8 tests
    - name: Analysing the code with black
      run: |
        source .venv/bin/activate
        black --line-length 100 --check src
        black --line-length 100 --check tests
    - name: Lint markdown files
      run: |
        source .venv/bin/activate
        pymarkdown -d MD013 scan README.md CHANGELOG.md
    - name: Run unit tests with pytest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        source .venv/bin/activate
        pytest --color=yes --cov=src --cov-report=html --cov-report=xml --cov-report=term -ra
        coveralls
